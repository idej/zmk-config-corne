/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

ZMK_APPLY_MATRIX_TRANSFORM(five_column_transform)

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-while-undecided;
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-while-undecided;
            hold-trigger-on-release;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LP {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 15>;
        };

        RP {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        LB {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <15 14>;
        };

        RB {
            bindings = <&kp RBKT>;
            key-positions = <20 21>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <16 15 14>;
        };

        bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q         &kp W            &kp E            &kp R              &kp T        &kp Y    &kp U               &kp I             &kp O             &kp P          
&hml LCTRL A  &hml LEFT_ALT S  &hml LEFT_WIN D  &hml LEFT_SHIFT F  &kp G        &kp H    &hmr RIGHT_SHIFT J  &hmr RIGHT_WIN K  &hmr RIGHT_ALT L  &hmr RCTRL SEMI
&kp Z         &kp X            &kp C            &kp V              &kp B        &kp N    &kp M               &kp COMMA         &kp DOT           &kp FSLH       
                                      &kp LEFT         &mo 1              &kp SPACE    &kp RET  &mo 2               &kp RIGHT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
            // | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
            // |     |     |     |     |     |   |     |     |     |     |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans
&trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
            // |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR
&trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH
&trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
