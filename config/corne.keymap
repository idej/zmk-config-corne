/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/ {
    chosen { zmk,matrix-transform = &five_column_transform; };
};

#include "keys/36.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-while-undecided;
            hold-trigger-on-release;
            hold-trigger-key-positions = <RIGHT_KEYS THUMB_KEYS>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-while-undecided;
            hold-trigger-on-release;
            hold-trigger-key-positions = <LEFT_KEYS THUMB_KEYS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        LP {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <13 14>;
        };

        RP {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <15 16>;
        };

        LB {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <12 11>;
        };

        RB {
            bindings = <&kp RBKT>;
            key-positions = <17 18>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <11 12 13>;
        };

        bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17 18>;
        };

        LCB {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <10 11>;
        };

        RCB {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        main {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q            &kp W              &kp E  &kp R      &kp T               &kp Y               &kp U             &kp I            &kp O        &kp P        &hml LCTRL A   &hml LEFT_ALT S
&hml LEFT_WIN D  &hml LEFT_SHIFT F  &kp G  &kp H      &hmr RIGHT_SHIFT J  &hmr RIGHT_WIN K    &hmr RIGHT_ALT L  &hmr RCTRL SEMI  &kp Z        &kp X        &kp C          &kp V
&kp B            &kp N              &kp M  &kp COMMA  &kp DOT             &kp FSLH            &caps_word        &kp TAB          &lt 1 SPACE  &lt 2 ENTER  &kp BACKSPACE  &kp CAPS
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
            // | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
            // |     |     |     |     |     |   |     |     |     |     |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4    &kp N5    &kp N6    &kp N7     &kp N8  &kp N9     &kp N0   &none   &none
&none   &none   &none   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans     &trans   &trans  &trans
&trans  &trans  &trans  &trans    &trans    &trans    &kp LGUI   &trans  &kp SPACE  &kp RET  &trans  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
            // |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp EXCL   &kp AT     &kp HASH  &kp DLLR   &kp PRCNT  &kp CARET    &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &trans  &kp SQT
&kp GRAVE  &kp TILDE  &trans    &kp MINUS  &kp EQUAL  &kp LBKT     &kp RBKT  &kp BSLH   &trans     &trans    &trans  &trans
&trans     &kp UNDER  &kp PLUS  &kp LBRC   &kp RBRC   &kp PIPE     &kp LGUI  &trans     &kp SPACE  &kp RET   &trans  &kp RALT
            >;
        };
    };
};
